//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pro_Devs.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegistration", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UserRegistration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.CartItem[] CartItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.Invoice[] InvoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.CartItem[] CartItems {
            get {
                return this.CartItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartItemsField, value) != true)) {
                    this.CartItemsField = value;
                    this.RaisePropertyChanged("CartItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.Invoice[] Invoices {
            get {
                return this.InvoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicesField, value) != true)) {
                    this.InvoicesField = value;
                    this.RaisePropertyChanged("Invoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CartItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.UserRegistration UserRegistrationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.UserRegistration UserRegistration {
            get {
                return this.UserRegistrationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRegistrationField, value) != true)) {
                    this.UserRegistrationField = value;
                    this.RaisePropertyChanged("UserRegistration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.InvoiceItem[] InvoiceItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.UserRegistration UserRegistrationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.InvoiceItem[] InvoiceItems {
            get {
                return this.InvoiceItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceItemsField, value) != true)) {
                    this.InvoiceItemsField = value;
                    this.RaisePropertyChanged("InvoiceItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.UserRegistration UserRegistration {
            get {
                return this.UserRegistrationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRegistrationField, value) != true)) {
                    this.UserRegistrationField = value;
                    this.RaisePropertyChanged("UserRegistration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.CartItem[] CartItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrl_Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.InvoiceItem[] InvoiceItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.CartItem[] CartItems {
            get {
                return this.CartItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.CartItemsField, value) != true)) {
                    this.CartItemsField = value;
                    this.RaisePropertyChanged("CartItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl_ {
            get {
                return this.ImageUrl_Field;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrl_Field, value) != true)) {
                    this.ImageUrl_Field = value;
                    this.RaisePropertyChanged("ImageUrl_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.InvoiceItem[] InvoiceItems {
            get {
                return this.InvoiceItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceItemsField, value) != true)) {
                    this.InvoiceItemsField = value;
                    this.RaisePropertyChanged("InvoiceItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceItem", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class InvoiceItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.Invoice InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Pro_Devs.ServiceReference1.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.Invoice Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceField, value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((this.InvoiceIdField.Equals(value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Pro_Devs.ServiceReference1.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        bool Register(string firstName, string lastName, string email, string password, string gender, string userType, System.DateTime createDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Register", ReplyAction="http://tempuri.org/IService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string firstName, string lastName, string email, string password, string gender, string userType, System.DateTime createDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        Pro_Devs.ServiceReference1.UserRegistration Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.UserRegistration> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        Pro_Devs.ServiceReference1.Product GetProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product> GetProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllProducts", ReplyAction="http://tempuri.org/IService/GetAllProductsResponse")]
        Pro_Devs.ServiceReference1.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllProducts", ReplyAction="http://tempuri.org/IService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBestSellingProducts", ReplyAction="http://tempuri.org/IService/GetBestSellingProductsResponse")]
        Pro_Devs.ServiceReference1.Product[] GetBestSellingProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetBestSellingProducts", ReplyAction="http://tempuri.org/IService/GetBestSellingProductsResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetBestSellingProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByCategory", ReplyAction="http://tempuri.org/IService/GetProductsByCategoryResponse")]
        Pro_Devs.ServiceReference1.Product[] GetProductsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByCategory", ReplyAction="http://tempuri.org/IService/GetProductsByCategoryResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByPriceRange", ReplyAction="http://tempuri.org/IService/GetProductsByPriceRangeResponse")]
        Pro_Devs.ServiceReference1.Product[] GetProductsByPriceRange(decimal minPrice, decimal maxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByPriceRange", ReplyAction="http://tempuri.org/IService/GetProductsByPriceRangeResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByPriceRangeAsync(decimal minPrice, decimal maxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        bool AddProduct(Pro_Devs.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        System.Threading.Tasks.Task<bool> AddProductAsync(Pro_Devs.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProduct", ReplyAction="http://tempuri.org/IService/UpdateProductResponse")]
        bool UpdateProduct(Pro_Devs.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProduct", ReplyAction="http://tempuri.org/IService/UpdateProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(Pro_Devs.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProduct", ReplyAction="http://tempuri.org/IService/DeleteProductResponse")]
        bool DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProduct", ReplyAction="http://tempuri.org/IService/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToCart", ReplyAction="http://tempuri.org/IService/AddToCartResponse")]
        bool AddToCart(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToCart", ReplyAction="http://tempuri.org/IService/AddToCartResponse")]
        System.Threading.Tasks.Task<bool> AddToCartAsync(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCartItemCount", ReplyAction="http://tempuri.org/IService/GetCartItemCountResponse")]
        int GetCartItemCount(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCartItemCount", ReplyAction="http://tempuri.org/IService/GetCartItemCountResponse")]
        System.Threading.Tasks.Task<int> GetCartItemCountAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveFromCart", ReplyAction="http://tempuri.org/IService/RemoveFromCartResponse")]
        bool RemoveFromCart(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveFromCart", ReplyAction="http://tempuri.org/IService/RemoveFromCartResponse")]
        System.Threading.Tasks.Task<bool> RemoveFromCartAsync(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCart", ReplyAction="http://tempuri.org/IService/UpdateCartResponse")]
        bool UpdateCart(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCart", ReplyAction="http://tempuri.org/IService/UpdateCartResponse")]
        System.Threading.Tasks.Task<bool> UpdateCartAsync(int userId, int productId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCartItems", ReplyAction="http://tempuri.org/IService/GetCartItemsResponse")]
        Pro_Devs.ServiceReference1.CartItem[] GetCartItems(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCartItems", ReplyAction="http://tempuri.org/IService/GetCartItemsResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.CartItem[]> GetCartItemsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Checkout", ReplyAction="http://tempuri.org/IService/CheckoutResponse")]
        Pro_Devs.ServiceReference1.Invoice Checkout(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Checkout", ReplyAction="http://tempuri.org/IService/CheckoutResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Invoice> CheckoutAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoiceDetails", ReplyAction="http://tempuri.org/IService/GetInvoiceDetailsResponse")]
        Pro_Devs.ServiceReference1.Invoice GetInvoiceDetails(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoiceDetails", ReplyAction="http://tempuri.org/IService/GetInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Invoice> GetInvoiceDetailsAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoiceItems", ReplyAction="http://tempuri.org/IService/GetInvoiceItemsResponse")]
        Pro_Devs.ServiceReference1.InvoiceItem[] GetInvoiceItems(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetInvoiceItems", ReplyAction="http://tempuri.org/IService/GetInvoiceItemsResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.InvoiceItem[]> GetInvoiceItemsAsync(int invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ApplyDiscount", ReplyAction="http://tempuri.org/IService/ApplyDiscountResponse")]
        decimal ApplyDiscount(decimal totalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ApplyDiscount", ReplyAction="http://tempuri.org/IService/ApplyDiscountResponse")]
        System.Threading.Tasks.Task<decimal> ApplyDiscountAsync(decimal totalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRegisteredUsersCountByDate", ReplyAction="http://tempuri.org/IService/GetRegisteredUsersCountByDateResponse")]
        int GetRegisteredUsersCountByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRegisteredUsersCountByDate", ReplyAction="http://tempuri.org/IService/GetRegisteredUsersCountByDateResponse")]
        System.Threading.Tasks.Task<int> GetRegisteredUsersCountByDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalProductsSold", ReplyAction="http://tempuri.org/IService/GetTotalProductsSoldResponse")]
        int GetTotalProductsSold();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalProductsSold", ReplyAction="http://tempuri.org/IService/GetTotalProductsSoldResponse")]
        System.Threading.Tasks.Task<int> GetTotalProductsSoldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalOrdersPlaced", ReplyAction="http://tempuri.org/IService/GetTotalOrdersPlacedResponse")]
        int GetTotalOrdersPlaced();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalOrdersPlaced", ReplyAction="http://tempuri.org/IService/GetTotalOrdersPlacedResponse")]
        System.Threading.Tasks.Task<int> GetTotalOrdersPlacedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsInSockCount", ReplyAction="http://tempuri.org/IService/GetProductsInSockCountResponse")]
        int GetProductsInSockCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsInSockCount", ReplyAction="http://tempuri.org/IService/GetProductsInSockCountResponse")]
        System.Threading.Tasks.Task<int> GetProductsInSockCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalProductsSoldOverTime", ReplyAction="http://tempuri.org/IService/GetTotalProductsSoldOverTimeResponse")]
        int[] GetTotalProductsSoldOverTime(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalProductsSoldOverTime", ReplyAction="http://tempuri.org/IService/GetTotalProductsSoldOverTimeResponse")]
        System.Threading.Tasks.Task<int[]> GetTotalProductsSoldOverTimeAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalOrdersPlacedOverTime", ReplyAction="http://tempuri.org/IService/GetTotalOrdersPlacedOverTimeResponse")]
        int[] GetTotalOrdersPlacedOverTime(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTotalOrdersPlacedOverTime", ReplyAction="http://tempuri.org/IService/GetTotalOrdersPlacedOverTimeResponse")]
        System.Threading.Tasks.Task<int[]> GetTotalOrdersPlacedOverTimeAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByStockStatus", ReplyAction="http://tempuri.org/IService/GetProductsByStockStatusResponse")]
        Pro_Devs.ServiceReference1.Product[] GetProductsByStockStatus(string stockStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsByStockStatus", ReplyAction="http://tempuri.org/IService/GetProductsByStockStatusResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByStockStatusAsync(string stockStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsSoldByDateRange", ReplyAction="http://tempuri.org/IService/GetProductsSoldByDateRangeResponse")]
        Pro_Devs.ServiceReference1.Product[] GetProductsSoldByDateRange(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductsSoldByDateRange", ReplyAction="http://tempuri.org/IService/GetProductsSoldByDateRangeResponse")]
        System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsSoldByDateRangeAsync(System.DateTime startDate, System.DateTime endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Pro_Devs.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Pro_Devs.ServiceReference1.IService>, Pro_Devs.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string firstName, string lastName, string email, string password, string gender, string userType, System.DateTime createDate) {
            return base.Channel.Register(firstName, lastName, email, password, gender, userType, createDate);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string firstName, string lastName, string email, string password, string gender, string userType, System.DateTime createDate) {
            return base.Channel.RegisterAsync(firstName, lastName, email, password, gender, userType, createDate);
        }
        
        public Pro_Devs.ServiceReference1.UserRegistration Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.UserRegistration> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public Pro_Devs.ServiceReference1.Product GetProduct(int id) {
            return base.Channel.GetProduct(id);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product> GetProductAsync(int id) {
            return base.Channel.GetProductAsync(id);
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetBestSellingProducts() {
            return base.Channel.GetBestSellingProducts();
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetBestSellingProductsAsync() {
            return base.Channel.GetBestSellingProductsAsync();
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetProductsByCategory(string category) {
            return base.Channel.GetProductsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByCategoryAsync(string category) {
            return base.Channel.GetProductsByCategoryAsync(category);
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetProductsByPriceRange(decimal minPrice, decimal maxPrice) {
            return base.Channel.GetProductsByPriceRange(minPrice, maxPrice);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByPriceRangeAsync(decimal minPrice, decimal maxPrice) {
            return base.Channel.GetProductsByPriceRangeAsync(minPrice, maxPrice);
        }
        
        public bool AddProduct(Pro_Devs.ServiceReference1.Product product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(Pro_Devs.ServiceReference1.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public bool UpdateProduct(Pro_Devs.ServiceReference1.Product product) {
            return base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(Pro_Devs.ServiceReference1.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public bool DeleteProduct(int id) {
            return base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public bool AddToCart(int userId, int productId, int quantity) {
            return base.Channel.AddToCart(userId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddToCartAsync(int userId, int productId, int quantity) {
            return base.Channel.AddToCartAsync(userId, productId, quantity);
        }
        
        public int GetCartItemCount(int userId) {
            return base.Channel.GetCartItemCount(userId);
        }
        
        public System.Threading.Tasks.Task<int> GetCartItemCountAsync(int userId) {
            return base.Channel.GetCartItemCountAsync(userId);
        }
        
        public bool RemoveFromCart(int userId, int productId) {
            return base.Channel.RemoveFromCart(userId, productId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveFromCartAsync(int userId, int productId) {
            return base.Channel.RemoveFromCartAsync(userId, productId);
        }
        
        public bool UpdateCart(int userId, int productId, int quantity) {
            return base.Channel.UpdateCart(userId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCartAsync(int userId, int productId, int quantity) {
            return base.Channel.UpdateCartAsync(userId, productId, quantity);
        }
        
        public Pro_Devs.ServiceReference1.CartItem[] GetCartItems(int userId) {
            return base.Channel.GetCartItems(userId);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.CartItem[]> GetCartItemsAsync(int userId) {
            return base.Channel.GetCartItemsAsync(userId);
        }
        
        public Pro_Devs.ServiceReference1.Invoice Checkout(int userId) {
            return base.Channel.Checkout(userId);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Invoice> CheckoutAsync(int userId) {
            return base.Channel.CheckoutAsync(userId);
        }
        
        public Pro_Devs.ServiceReference1.Invoice GetInvoiceDetails(int userid) {
            return base.Channel.GetInvoiceDetails(userid);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Invoice> GetInvoiceDetailsAsync(int userid) {
            return base.Channel.GetInvoiceDetailsAsync(userid);
        }
        
        public Pro_Devs.ServiceReference1.InvoiceItem[] GetInvoiceItems(int invoiceId) {
            return base.Channel.GetInvoiceItems(invoiceId);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.InvoiceItem[]> GetInvoiceItemsAsync(int invoiceId) {
            return base.Channel.GetInvoiceItemsAsync(invoiceId);
        }
        
        public decimal ApplyDiscount(decimal totalAmount) {
            return base.Channel.ApplyDiscount(totalAmount);
        }
        
        public System.Threading.Tasks.Task<decimal> ApplyDiscountAsync(decimal totalAmount) {
            return base.Channel.ApplyDiscountAsync(totalAmount);
        }
        
        public int GetRegisteredUsersCountByDate(System.DateTime date) {
            return base.Channel.GetRegisteredUsersCountByDate(date);
        }
        
        public System.Threading.Tasks.Task<int> GetRegisteredUsersCountByDateAsync(System.DateTime date) {
            return base.Channel.GetRegisteredUsersCountByDateAsync(date);
        }
        
        public int GetTotalProductsSold() {
            return base.Channel.GetTotalProductsSold();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalProductsSoldAsync() {
            return base.Channel.GetTotalProductsSoldAsync();
        }
        
        public int GetTotalOrdersPlaced() {
            return base.Channel.GetTotalOrdersPlaced();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalOrdersPlacedAsync() {
            return base.Channel.GetTotalOrdersPlacedAsync();
        }
        
        public int GetProductsInSockCount() {
            return base.Channel.GetProductsInSockCount();
        }
        
        public System.Threading.Tasks.Task<int> GetProductsInSockCountAsync() {
            return base.Channel.GetProductsInSockCountAsync();
        }
        
        public int[] GetTotalProductsSoldOverTime(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalProductsSoldOverTime(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int[]> GetTotalProductsSoldOverTimeAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalProductsSoldOverTimeAsync(startDate, endDate);
        }
        
        public int[] GetTotalOrdersPlacedOverTime(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalOrdersPlacedOverTime(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<int[]> GetTotalOrdersPlacedOverTimeAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTotalOrdersPlacedOverTimeAsync(startDate, endDate);
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetProductsByStockStatus(string stockStatus) {
            return base.Channel.GetProductsByStockStatus(stockStatus);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsByStockStatusAsync(string stockStatus) {
            return base.Channel.GetProductsByStockStatusAsync(stockStatus);
        }
        
        public Pro_Devs.ServiceReference1.Product[] GetProductsSoldByDateRange(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetProductsSoldByDateRange(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<Pro_Devs.ServiceReference1.Product[]> GetProductsSoldByDateRangeAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetProductsSoldByDateRangeAsync(startDate, endDate);
        }
    }
}
